module stop_watch_cascade
(
    input wire clk , rst ,
    input wire go ,
    output wire Time
);
//Three digits stop watch counts 00.0 to 99.9
localparam dvsr = 5000000 ;
wire tick_clk , tick1 , tick2 , tick3 ;
reg [22:0] counter_clk ;
reg [3:0] counter1 , counter2 , counter3;
assign Time = {counter3,counter1,counter1};
//assume clk = 50MHz want a tick every 0.1 second need 5000000 counts
always @(posedge clk or negedge rst) 
begin
        if(~rst)
        counter_clk <= 0;
        else if (~tick_clk)
        counter_clk <= counter_clk + 1;
	else counter_clk <= 0 ;
end
assign tick_clk  = (counter_clk == dvsr); //tick every 0.1 second 

always @(posedge clk or negedge rst) 
begin
    if(~rst)
    counter1 <= 0;
    else if (tick_clk )
        begin
            if(tick1)
            counter1 <=0;
            else
            counter1 <= counter1 + 1 ;
        end
end
assign tick1 = (counter1 == 4'b1001);

always @(posedge clk or negedge rst) 
begin
    if(~rst)
    counter2 <= 0;
    else if (tick_clk && tick1 )
    begin
            if(tick2)
            counter2 <=0;
            else
            counter2 <= counter2 + 1 ;
    end
end
assign tick2 = (counter2 == 4'b1001);

always @(posedge clk or negedge rst) 
begin
    if(~rst)
    counter3 <= 0;
    else if (tick_clk &&  tick2 && tick1 )
    begin
        if(tick3)
        counter3 <= 0;
        else
        counter3 <= counter3 +1;
    end
end
assign tick3 = (counter3 == 4'b1001);

endmodule
